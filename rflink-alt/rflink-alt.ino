#define RFLINK_ALT_VERSION "0.0.3" 

// RFLink alt:
//
// Alternative firmware for the NODO RFLink.
//
// Major goal: increased flexibility and open source
//    the firmware will not support the RFLink Serial protocol.
//    instead it will be a 'transparent' interface, sending received pulses to the host
//    and the host send pulse buffers to FLink-als to for transmission.
//    This way the RFLink-alt needs know knowledge of any of the 433 protocols.
//    Instead the Host can parse and assemble message.

// Host interface description:
// RfLink-Alt -> Host  starting with "i:" are informative messages

// RECEIVING:
// RfLink-Alt -> Host  starting with "r:" are received pulses
//   r:[number of pulses]:[pulse length],[pulse length],[pulse length],[pulse length],
//   e.g.:
//   "r:21:20,40,20,40,20,40,20,40,20,40,20,40,20,40,20,40,20,40,40,20,40"
//   All PUSLE LENGTHs are in units of 10us!!

// TRANSMITTING:
// Host -> RfLink-alt  starting with "t:" are pulses to transmit:
//   t:[number of repeats],[delay between repeats],[pulse length],pulse length],...
// example pulses to send:
// "t, 1, 1, 10, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 121, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 21, 59, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20, 60, 20, 20, 20, 20, 20, 20, 20, 20, 120, 120, 20, 60, 60, 20, 20, 60, 60, 20, 60, 20, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 60, 20, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 60, 60, 20, 60, 20, 60, 20, 60, 20, 60, 20, 20, 60, 20"
// "t 10 40 35, 35,  70,  70,  35,  70,  35,  70,  35,  35,  70,  70,  35,  35,  70,  70,  35,  70,  35,  35,  70,  70,  35,  35,  70,  35,  70,  35,  70,  70,  35,  70,  35,  70,  35,  35,  70"
//  !!  All PUSLE LENGTHs are in units of 10us !!
//  !!  Do NOT use zeros !!


// TODOs:
// ***  Code in the 'Aurel' tab must be refactored into a class
// ***  Receive ISR should use a timer to measure the length of pulses for higher temporal accuray
// ***  Remove the test code in test tab
//
//
// Changes:
//  - decreased MIN_PULSE_TIME from 100 to 90 us.
//  - implemented interpreter for sending pulses
//  - removed test code
//  V0.0.3:  
//  - Added version number, added code comments, some minor changes
